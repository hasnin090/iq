const Database = require('better-sqlite3');
const bcrypt = require('bcryptjs');

// ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุญููุฉ
const sqlite = new Database('./local.db');

console.log('๐ ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุญููุฉ...');

try {
  // ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู
  sqlite.exec(`
    CREATE TABLE IF NOT EXISTS users (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      username TEXT UNIQUE NOT NULL,
      password TEXT NOT NULL,
      email TEXT,
      role TEXT DEFAULT 'user',
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
    )
  `);

  // ุฅูุดุงุก ุฌุฏูู ุงููุดุงุฑูุน
  sqlite.exec(`
    CREATE TABLE IF NOT EXISTS projects (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      name TEXT NOT NULL,
      description TEXT,
      created_by INTEGER,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (created_by) REFERENCES users(id)
    )
  `);

  // ุฅูุดุงุก ุฌุฏูู ุงููุนุงููุงุช
  sqlite.exec(`
    CREATE TABLE IF NOT EXISTS transactions (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      amount REAL NOT NULL,
      description TEXT,
      type TEXT NOT NULL,
      project_id INTEGER,
      user_id INTEGER,
      attachment_url TEXT,
      attachment_path TEXT,
      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (project_id) REFERENCES projects(id),
      FOREIGN KEY (user_id) REFERENCES users(id)
    )
  `);

  // ุฅูุดุงุก ุฌุฏูู ุงูุฌูุณุงุช
  sqlite.exec(`
    CREATE TABLE IF NOT EXISTS sessions (
      sid TEXT PRIMARY KEY,
      sess TEXT NOT NULL,
      expire DATETIME NOT NULL
    )
  `);

  console.log('โ ุชู ุฅูุดุงุก ุงูุฌุฏุงูู ุจูุฌุงุญ');

  // ุฅูุดุงุก ูุณุชุฎุฏู admin ุงูุชุฑุงุถู
  const adminExists = sqlite.prepare('SELECT id FROM users WHERE username = ?').get('admin');
  if (!adminExists) {
    // ูููุฉ ุงููุฑูุฑ: admin123 (ูุดูุฑุฉ)
    const hashedPassword = bcrypt.hashSync('admin123', 10);
    
    sqlite.prepare(`
      INSERT INTO users (username, password, email, role)
      VALUES (?, ?, ?, ?)
    `).run('admin', hashedPassword, 'admin@example.com', 'admin');
    
    console.log('โ ุชู ุฅูุดุงุก ูุณุชุฎุฏู admin ุจูุฌุงุญ');
    console.log('   ุงุณู ุงููุณุชุฎุฏู: admin');
    console.log('   ูููุฉ ุงููุฑูุฑ: admin123');
  } else {
    console.log('โน๏ธ  ูุณุชุฎุฏู admin ููุฌูุฏ ูุณุจูุงู');
  }

  // ุฅูุดุงุก ูุดุฑูุน ุชุฌุฑูุจู
  const projectExists = sqlite.prepare('SELECT id FROM projects WHERE name = ?').get('ุงููุดุฑูุน ุงูุชุฌุฑูุจู');
  if (!projectExists) {
    const adminId = sqlite.prepare('SELECT id FROM users WHERE username = ?').get('admin').id;
    sqlite.prepare(`
      INSERT INTO projects (name, description, created_by)
      VALUES (?, ?, ?)
    `).run('ุงููุดุฑูุน ุงูุชุฌุฑูุจู', 'ูุดุฑูุน ุชุฌุฑูุจู ููุงุฎุชุจุงุฑ', adminId);
    
    console.log('โ ุชู ุฅูุดุงุก ูุดุฑูุน ุชุฌุฑูุจู');
  }

  console.log('โ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุญููุฉ ุจูุฌุงุญ');
  console.log('๐ ููู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ./local.db');
  
} catch (error) {
  console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
} finally {
  sqlite.close();
}
